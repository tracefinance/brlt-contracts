---
description: Solidity
globs: contracts/**/*,*.sol
alwaysApply: false
---
# Windsurf Rules for Smart Contract Development

## Code Organization
- Maintain clear directory structure for contracts, tests, and deployment scripts
- Follow single responsibility principle for contract files
- Use meaningful and descriptive file names
- Keep related functionality grouped together

## Development Standards
- Use latest stable Solidity version
- Specify exact pragma version
- ALWAYS prefer scripts from package.json instead of running commands directly for compile, test and deploy
- Follow consistent contract structure:
  * State variables
  * Events
  * Modifiers
  * Constructor
  * External/public functions
  * Internal/private functions
- Implement proper access control
- Use descriptive variable and function names

## Security Guidelines
- Validate all inputs with require statements
- Implement reentrancy protection
- Use safe math operations
- Follow Checks-Effects-Interactions pattern
- Implement timelocks for critical operations
- Avoid using tx.origin for authentication
- Protect against front-running where applicable

## Testing Requirements
- Maintain minimum 90% test coverage
- Test both success and failure cases
- Include edge case testing
- Verify access control
- Test time-dependent functionality
- Validate state changes
- Test event emissions

## Documentation Rules
- Use NatSpec comments for public/external functions
- Document all events and their parameters
- Explain complex logic with inline comments
- Keep documentation synchronized with code
- Document all state variables
- Include deployment parameters

## Performance Guidelines
- Optimize gas usage
- Use appropriate data structures
- Minimize storage operations
- Implement batching where possible
- Use custom errors instead of strings
- Pack storage variables efficiently

## Development Workflow
- Write meaningful commit messages
- Keep pull requests focused
- Update tests with code changes
- Test on testnet before mainnet
- Verify contract source code
- Document deployment addresses

## Error Handling
- Use specific error messages
- Implement proper error recovery
- Handle edge cases
- Document error conditions
- Use standardized error patterns

## Event Logging
- Log all important state changes
- Include indexed parameters
- Use consistent naming
- Document event purposes
- Maintain event history

## Maintenance
- Keep dependencies updated
- Monitor contract performance
- Document upgrade procedures
- Maintain deployment history
- Track gas usage patterns